// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jquerymobile', 'underscore', 'parse', 'routers/myrouter'], function($, Mobile, _, Parse, MyRouter) {
    var _ref;
    return window.App = (function(_super) {
      __extends(App, _super);

      function App() {
        _ref = App.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      App.prototype.className = "App";

      App.prototype.initialize = function() {
        console.log("app");
        return this.initParse();
      };

      App.prototype.initParse = function() {
        Parse.initialize("pxBn6DIgzMNAtUuG6N08MdPqqGywblo9JPkMwdUe", "CUsQapRcahYD2ztJAAeDMiLhPKxddG0reZFVn6fx");
        return Parse.User.logIn("johnny", "1234", {
          success: function(user) {
            var router;
            console.log('success logging in');
            router = new MyRouter;
            Parse.history.start();
            return $(document).on("click", "a:not([data-bypass])", function(evt) {
              var href, root;
              href = {
                prop: $(this).prop("href"),
                attr: $(this).attr("href")
              };
              root = location.protocol + "//" + location.host + "/";
              if (href.prop && href.prop.slice(0, root.length) === root) {
                evt.preventDefault();
                Parse.history.navigate(href.attr, true);
              }
              return $('#myPanel').panel("close");
            });
          },
          error: function(user, error) {
            console.error('error logging in', error);
            return alert('wrong username or password');
          }
        });
      };

      return App;

    })(Parse.Object);
  });

}).call(this);
