// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jquerymobile', 'underscore', 'parse', 'collections/steplist'], function($, Mobile, _, Parse, StepList) {
    var UserSetup, _ref;
    return UserSetup = (function(_super) {
      __extends(UserSetup, _super);

      function UserSetup() {
        _ref = UserSetup.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      UserSetup.prototype.initialize = function() {
        return this.setUpUser();
      };

      UserSetup.prototype.setUpUser = function() {
        var currentUser;
        if (window.uploader.getMode() !== "online") {
          console.log("sorry, you must be online to set up the user");
          return;
        }
        currentUser = Parse.User.current();
        if (currentUser.get('isSetUp') === true) {
          console.log('user already set up');
          return window.queries.syncParseWithLocalStorage();
        } else {
          return this.setUpSafety();
        }
      };

      UserSetup.prototype.setUpSafety = function() {
        var currentUser, list, obj_arr, st, stepJSON, _i, _len, _ref1;
        console.log('setting up safety');
        list = new StepList;
        stepJSON = [
          {
            "step_num": 1,
            "title": "Warning Signs",
            "description": "Warning signs (thoughts, images, mood, situation, behavior) that a crisis may be developing:",
            "fields": ["warning sign"]
          }, {
            "step_num": 2,
            "title": "Coping Strategies",
            "description": "Internal coping strategies: things I can do to take my mind off my problems without contacting another person (relaxation technique, physical activity):",
            "fields": ["coping strategy"]
          }, {
            "step_num": 3,
            "title": "People",
            "description": "People that provide distraction:",
            "fields": ["name", "phone number"]
          }, {
            "step_num": 4,
            "title": "Settings",
            "description": "Social settings that provide distraction:",
            "fields": ["place"]
          }
        ];
        list.add(stepJSON);
        currentUser = Parse.User.current();
        obj_arr = [];
        _ref1 = list.models;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          st = _ref1[_i];
          st.set({
            user: currentUser
          });
          st.setACL(new Parse.ACL(currentUser));
          obj_arr.push(st);
        }
        return queries.saveAllObjects(obj_arr).then((function() {
          return window.queries.syncParseWithLocalStorage();
        }), function(error) {
          return console.error('error saving objects', error);
        });
      };

      return UserSetup;

    })(Parse.Object);
  });

}).call(this);
