// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jquerymobile', 'underscore', 'parse'], function($, Mobile, _, Parse) {
    var Uploader, _ref;
    return Uploader = (function(_super) {
      __extends(Uploader, _super);

      function Uploader() {
        _ref = Uploader.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Uploader.prototype.className = "Uploader";

      Uploader.prototype.mode = "online";

      Uploader.prototype.updatedOffline = false;

      Uploader.prototype.initialize = function() {
        _.bindAll(this, 'getUpdatedOffline', 'setUpdatedOffline', 'getMode', 'updateMode');
        return console.log("uploader");
      };

      Uploader.prototype.getUpdatedOffline = function() {
        return this.wasUpdatedOffline;
      };

      Uploader.prototype.setUpdatedOffline = function(newval) {
        console.log('updated offline: ', newval);
        return this.updatedOffline = newval;
      };

      Uploader.prototype.getMode = function() {
        return this.mode;
      };

      Uploader.prototype.updateMode = function(newmode) {
        var oldmode;
        oldmode = this.mode;
        this.mode = newmode;
        console.log('newmode', this.mode);
        if (oldmode === "offline" && newmode === "online" && this.updatedOffline === true) {
          console.log('doing online updates automatically');
          this.updatedOffline = false;
          return window.queries.updateCollectionOnline();
        }
      };

      return Uploader;

    })(Parse.Object);
  });

}).call(this);
