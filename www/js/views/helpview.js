// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jquerymobile', 'underscore', 'parse', 'text!templates/helptemplate.html'], function($, Mobile, _, Parse, helptemplate) {
    var HelpView, _ref;
    return HelpView = (function(_super) {
      __extends(HelpView, _super);

      function HelpView() {
        _ref = HelpView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      HelpView.prototype.tagName = "div";

      HelpView.prototype.template = _.template(helptemplate);

      HelpView.prototype.initialize = function() {
        return _.bindAll(this, 'render', 'jqdisplay');
      };

      HelpView.prototype.render = function() {
        return $(this.el).html(this.template);
      };

      HelpView.prototype.jqdisplay = function() {
        return $('[data-role="button"]').button();
      };

      HelpView.prototype.close = function() {
        console.log('inside close method of help view');
        $(this.el).empty();
        this.undelegateEvents();
        $(this.el).removeData().unbind();
        this.remove();
        this.unbind();
        Parse.View.prototype.remove.call(this);
        return delete this;
      };

      return HelpView;

    })(Parse.View);
  });

}).call(this);
